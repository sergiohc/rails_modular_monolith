# typed: true

# DO NOT EDIT MANUALLY
# This is an autogenerated file for types exported from the `attr_extras` gem.
# Please instead update this file by running `bin/tapioca gem attr_extras`.


# source://attr_extras//lib/attr_extras/version.rb#1
module AttrExtras
  class << self
    # source://attr_extras//lib/attr_extras/explicit.rb#12
    def mixin; end
  end
end

# source://attr_extras//lib/attr_extras/attr_implement.rb#1
class AttrExtras::AttrImplement
  # @return [AttrImplement] a new instance of AttrImplement
  #
  # source://attr_extras//lib/attr_extras/attr_implement.rb#2
  def initialize(klass, names); end

  # source://attr_extras//lib/attr_extras/attr_implement.rb#7
  def apply; end
end

# source://attr_extras//lib/attr_extras/params_builder.rb#2
class AttrExtras::AttrInitialize
  # @return [AttrInitialize] a new instance of AttrInitialize
  #
  # source://attr_extras//lib/attr_extras/attr_initialize.rb#4
  def initialize(klass, names, block); end

  # source://attr_extras//lib/attr_extras/attr_initialize.rb#13
  def apply; end

  private

  # Returns the value of attribute klass.
  #
  # source://attr_extras//lib/attr_extras/attr_initialize.rb#10
  def klass; end

  # Returns the value of attribute names.
  #
  # source://attr_extras//lib/attr_extras/attr_initialize.rb#10
  def names; end

  # source://attr_extras//lib/attr_extras/attr_initialize.rb#59
  def validate_args(values, klass_params); end

  # source://attr_extras//lib/attr_extras/attr_initialize.rb#49
  def validate_arity(provided_arity, klass); end
end

# source://attr_extras//lib/attr_extras/params_builder.rb#3
class AttrExtras::AttrInitialize::ParamsBuilder
  # @return [ParamsBuilder] a new instance of ParamsBuilder
  #
  # source://attr_extras//lib/attr_extras/params_builder.rb#6
  def initialize(names); end

  # source://attr_extras//lib/attr_extras/params_builder.rb#32
  def default_values; end

  # source://attr_extras//lib/attr_extras/params_builder.rb#17
  def hash_args; end

  # source://attr_extras//lib/attr_extras/params_builder.rb#23
  def hash_args_names; end

  # source://attr_extras//lib/attr_extras/params_builder.rb#27
  def hash_args_required; end

  # source://attr_extras//lib/attr_extras/params_builder.rb#13
  def positional_args; end

  private

  # Returns the value of attribute names.
  #
  # source://attr_extras//lib/attr_extras/params_builder.rb#10
  def names; end

  # source://attr_extras//lib/attr_extras/params_builder.rb#44
  def remove_required_sign(name); end
end

# source://attr_extras//lib/attr_extras/params_builder.rb#4
AttrExtras::AttrInitialize::ParamsBuilder::REQUIRED_SIGN = T.let(T.unsafe(nil), String)

# source://attr_extras//lib/attr_extras/attr_query.rb#1
module AttrExtras::AttrQuery
  class << self
    # source://attr_extras//lib/attr_extras/attr_query.rb#2
    def define_with_suffix(klass, suffix, *names); end
  end
end

# source://attr_extras//lib/attr_extras/attr_value.rb#1
class AttrExtras::AttrValue
  # @return [AttrValue] a new instance of AttrValue
  #
  # source://attr_extras//lib/attr_extras/attr_value.rb#2
  def initialize(klass, *names); end

  # source://attr_extras//lib/attr_extras/attr_value.rb#10
  def apply; end

  private

  # source://attr_extras//lib/attr_extras/attr_value.rb#22
  def define_equals; end

  # source://attr_extras//lib/attr_extras/attr_value.rb#32
  def define_hash_identity; end

  # source://attr_extras//lib/attr_extras/attr_value.rb#18
  def define_readers; end

  # Returns the value of attribute klass.
  #
  # source://attr_extras//lib/attr_extras/attr_value.rb#7
  def klass; end

  # Returns the value of attribute names.
  #
  # source://attr_extras//lib/attr_extras/attr_value.rb#7
  def names; end
end

# To avoid masking coding errors, we don't inherit from StandardError (which would be implicitly rescued). Forgetting to define a requisite method isn't just some runtime error.
#
# source://attr_extras//lib/attr_extras/explicit.rb#10
class AttrExtras::MethodNotImplementedError < ::Exception; end

# Separate module so that mixing in the methods doesn't also mix in constants:
# http://thepugautomatic.com/2014/02/private-api/
#
# source://attr_extras//lib/attr_extras/explicit.rb#18
module AttrExtras::Mixin
  # source://attr_extras//lib/attr_extras/explicit.rb#56
  def aattr_initialize(*names, &block); end

  # source://attr_extras//lib/attr_extras/explicit.rb#56
  def attr_accessor_initialize(*names, &block); end

  # source://attr_extras//lib/attr_extras/explicit.rb#89
  def attr_id_query(*names); end

  # source://attr_extras//lib/attr_extras/explicit.rb#93
  def attr_implement(*names); end

  # source://attr_extras//lib/attr_extras/explicit.rb#19
  def attr_initialize(*names, &block); end

  # source://attr_extras//lib/attr_extras/explicit.rb#23
  def attr_private(*names); end

  # source://attr_extras//lib/attr_extras/explicit.rb#35
  def attr_private_initialize(*names, &block); end

  # source://attr_extras//lib/attr_extras/explicit.rb#85
  def attr_query(*names); end

  # source://attr_extras//lib/attr_extras/explicit.rb#49
  def attr_reader_initialize(*names, &block); end

  # source://attr_extras//lib/attr_extras/explicit.rb#31
  def attr_value(*names); end

  # source://attr_extras//lib/attr_extras/explicit.rb#42
  def attr_value_initialize(*names, &block); end

  # source://attr_extras//lib/attr_extras/explicit.rb#97
  def cattr_implement(*names); end

  # source://attr_extras//lib/attr_extras/explicit.rb#81
  def method_object(*names, &block); end

  # source://attr_extras//lib/attr_extras/explicit.rb#35
  def pattr_initialize(*names, &block); end

  # source://attr_extras//lib/attr_extras/explicit.rb#49
  def rattr_initialize(*names, &block); end

  # source://attr_extras//lib/attr_extras/explicit.rb#63
  def static_facade(method_name_or_names, *names, &block); end

  # source://attr_extras//lib/attr_extras/explicit.rb#42
  def vattr_initialize(*names, &block); end
end

# source://attr_extras//lib/attr_extras/utils.rb#1
module AttrExtras::Utils
  class << self
    # source://attr_extras//lib/attr_extras/utils.rb#2
    def flat_names(names); end
  end
end

# source://attr_extras//lib/attr_extras/version.rb#2
AttrExtras::VERSION = T.let(T.unsafe(nil), String)
